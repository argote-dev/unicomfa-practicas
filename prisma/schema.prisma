generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String
  last_name  String
  address    String
  birth_date String
  idProgram  Int?
  program    Program? @relation(fields: [idProgram], references: [id])
  create_at  DateTime @default(now())
}

model Document {
  id           Int          @id @default(autoincrement())
  url          String
  date         DateTime
  typeId       Int
  typeDocument TypeDocument @relation(fields: [typeId], references: [id])
}

model TypeDocument {
  id       Int        @id @default(autoincrement())
  name     String
  Document Document[]
}

model Process {
  id              Int               @id @default(autoincrement())
  aproved         Boolean
  typeId          Int
  typeProcess     TypeProcess       @relation(fields: [typeId], references: [id])
  statusProcessId Int
  statusProcess   StatusProcess     @relation(fields: [statusProcessId], references: [id])
  ProcessOnReturn ProcessOnReturn[]
}

model TypeProcess {
  id      Int       @id @default(autoincrement())
  name    String
  Process Process[]
}

model Return {
  id              Int               @id @default(autoincrement())
  description     String
  ProcessOnReturn ProcessOnReturn[]
}

model StatusProcess {
  id      Int       @id @default(autoincrement())
  name    String
  Process Process[]
}

model ProcessOnReturn {
  id        Int      @id @default(autoincrement())
  processId Int
  process   Process  @relation(fields: [processId], references: [id])
  returnId  Int
  return    Return   @relation(fields: [returnId], references: [id])
  createAt  DateTime @default(now())
}

model Program {
  id        Int     @id @default(autoincrement())
  name      String
  idFaculty Int
  faculty   Faculty @relation(fields: [idFaculty], references: [id])
  User      User[]
}

model Faculty {
  id      Int       @id @default(autoincrement())
  name    String
  Program Program[]
}
